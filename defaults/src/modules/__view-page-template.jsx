/* eslint react/no-danger: 0 */

/**
 * Base-view react-component, which is the template for all pages.
 *
 * <i>Copyright (c) 2016 AcceleTrial - https://acceletrial.com</i><br>
 * Proprietary License
 *
 *
 * @module modules/__view-page-template.jsx
 * @class PageTemplate
 * @since 2.0.0
*/

'use strict';

var React = require('react'),
    PropTypes = React.PropTypes,
    TransferedProperties = require('itsa-react-server-webpack-builder/core-components/transfered-properties'),
    NON_CLIENT_PROPS = {
        '__itsacommonscript': true,
        '__itsapagescript': true,
        '__itsapagelinkcss': true,
        '__itsapageinlinecss': true
    };

var Page = React.createClass({

    propTypes: {
        /**
         * meta char-set
         *
         * @property __charset
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __charset: PropTypes.string.isRequired,

        /**
         * meta description
         *
         * @property __description
         * @protected
         * @private
         * @type String
         * @since 2.0.0
        */
        __description: PropTypes.string.isRequired,

        /**
         * The device that the visitor is using: "desktop", "tablet" or "mobile"
         *
         * @property __device
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __device: PropTypes.string.isRequired,

        /**
         * Google-analytics api-key
         *
         * @property __ga
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __ga: PropTypes.string,

        /**
         * Url for the shared script-file. This files is generated by webpack as common-script,
         * and also holds all webpack-functionality which runs on the client.
         *
         * @property __itsacommonscript
         * @type String|Boolean
         * @protected
         * @private
         * @since 2.0.0
        */
        __itsacommonscript: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),

        /**
         * The bundled inline css content: bundled for this specific pageview only
         *
         * @property __itsapageinlinecss
         * @type Object
         * @protected
         * @private
         * @since 2.0.0
        */
        __itsapageinlinecss: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),

        /**
         * Url for the bundled css: bundled for this specific pageview only
         *
         * @property __itsapagelinkcss
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __itsapagelinkcss: PropTypes.string,

        /**
         * Url for the page(view)-specific script-file. This files is generated by webpack as a chunck-file.
         *
         * @property __itsapagescript
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __itsapagescript: PropTypes.string,

        /**
         * The language to be used for this page. Is being controlled by the visitor,
         * either by its lang-preferences, or whenever the visitor changes to another
         * language through the web-application (f.e. "en").
         *
         * @property __lang
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __lang: PropTypes.string.isRequired,

        /**
         * The title for the page
         *
         * @property __title
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __title: PropTypes.string.isRequired,

        /**
         * The name of the page"s view
         *
         * @property __view
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __view: PropTypes.string.isRequired,

        /**
         * meta viewport
         *
         * @property __viewport
         * @type String
         * @protected
         * @private
         * @since 2.0.0
        */
        __viewport: PropTypes.string.isRequired,

        /**
         * The Component its children, which basicly consist of one react-component: the view.
         *
         * @property children
         * @type Object
         * @since 2.0.0
        */
        children: PropTypes.object
    },

    /**
     * React render-method --> renders the Component.
     *
     * @method render
     * @return ReactComponents
     * @since 2.0.0
     */
    render: function() {
        var googleAnalyticsInit, pagecss, keys, clientProps,
            props = this.props,
            commonscript = props.__itsacommonscript && <script src={props.__itsacommonscript} />,
            pagescript = props.__itsapagescript && <script src={props.__itsapagescript} />;

        if (props.__itsapagelinkcss) {
            pagecss = (<link
                data-src="inline"
                href={props.__itsapagelinkcss}
                rel="stylesheet" />);
        }
        else if (props.__itsapageinlinecss) {
            pagecss = (<style
                dangerouslySetInnerHTML={props.__itsapageinlinecss}
                data-src="inline" type="text/css" />);
        }
        // clone the props-oject, but leave some parts out:
        // don't send the heavy script and css, they are not needed as props on the client:
        clientProps = {};
        keys = Object.keys(props);
        keys.forEach(function(key) {
            if (!NON_CLIENT_PROPS[key]) {
                clientProps[key] = props[key];
            }
        });

        return (
            <html
                data-device={props.__device}
                data-page={props.__view}
                lang={props.__lang}>
            <head>
                <meta charSet={props.__charset} />
                <meta
                    content={props.__viewport}
                    name="viewport" />
                <meta
                    content={props.__description}
                    name="description" />
                {pagecss}
                <title>{props.__title}</title>
                {googleAnalyticsInit}
            </head>
            <body>
                <div id="view-container">
                    {props.children}
                </div>
                <TransferedProperties clientProps={clientProps} />
                {commonscript}
                {pagescript}
            </body>
            </html>
        );
    }
});

module.exports = Page;
